# Jedi Knight Cog Script
#
# KYLE.COG
#
# Main script for the player. Handles damage, death
# blocking animations, knockback ect ect
#
# (C) 2000 Shred18 & Hell Raiser

symbols

thing       player                           local
thing       camera                           local

template	Battle=+bbexp		local
template	Battle2=+bbexp2		local

sound       alarmsnd=00AlarmLoop01.WAV       local
template	CheckIt=+APGhost				 local
thing		CheckIt2						 local

keyframe	BlockAnim0=deflectl.key			local
keyframe	BlockAnim1=deflectr.key			local

int         nextBlock=0                      local
int         bin                              local
int         rank                             local
int         ring                             local

int         force_blinding=0                 local
int         blindingEffectHandle=-1          local
int         PulledWeapon                     local
int         playersector                     local

flex        camdamage=9999                   local

vector      playerpos                        local
vector      thrust                           local

int         beavis                           local
int         bub                              local

template    teleport_particles=+telesparks   local
sound       teleportsnd=ForceThrow01.WAV     local
sound       select=select.wav                local
sound       granted=granted.wav              local

template    bubble_tpl=bubble                local
template    bubble_tpl2=bubble2              local
template    bubble_tpl3=bubble3              local

template    splash_tpl=+watersplash          local
template    splash_tpl2=+watersplash2        local
int         a_splash                         local
int         sender                           local
int         source                           local
int         selection=0                      local 

material    im=immortality.mat               local                         
material    po=power.mat                     local                         
material    li=life.mat                      local

int         dummy=0                          local
int         blockPOVTrack=-1                 local
int         blockTrack=-1                    local

int         griptrackID=-1                   local
int         Score                            local

template	skidpars=+skidpars				local

template	Knockback=+knockback			local
template	Knockup=+knockup				local
template	Knockdown=+knockdown			local

int			KnockedBack						 local
thing		KnockedParent					 local

sound		KnockBack_Snd=groundslam.wav	local

keyframe	Getup=knockdowngetup.key		local
keyframe	Knock0=skid.key					local
keyframe	Knock1=knockback.key			local
keyframe	Knock2=knockup.key				local
keyframe	Knock3=knockdown.key			local

int			Knock_Id=-1						local

int			AttachSkid						local

int			FlyingAttack=-1					 local
int			Block=1						local
thing		damager						local
thing		LTarget						local

thing		ETarget						local
int			KeyNum				local
int			KeyMode				local

int			Owner				local

message     startup
message     pulse
message     killed
message     newplayer
message     timer
message     blocked
message     skill
message     damaged
message     splash
message     user0
message     user1
message		user2
message     trigger
message		touched

end

# ========================================================================================

code

startup:
   player = GetLocalPlayerThing();

   Knock_Id=-1;

	call init_MP;

	if(IsServer())
	{Debug=0;}
	else
	{Debug=0;}

   //if(IsMulti())
   //{call init_MP;}
   //else
   //{call init_kyle;}

   // Bubbles
   if(IsMulti())
      SetTimerEx(4 + 5 * rand(), 2, 0, 0);
   else
      SetTimerEx(2 + 5 * rand(), 2, 0, 0);

   Return;

# ........................................................................................

killed:

   if(player != GetSenderRef()) Return;

   if(IsMulti())
   {CreateBackpack(player);}

   // clean up force powers stuff
   if(blindingEffectHandle!=-1)
   {
      freeColorEffect(blindingEffectHandle);
      blindingEffectHandle = -1;
   }
   ClearActorFlags(player, 0x800);
   KillTimerEx(27);
   force_blinding = 0;

   ClearActorFlags(player, 0x40000);

   if(griptrackID != -1)
   {
      StopKey(player, griptrackID, 0.1);
      griptrackID = -1;
   }

	SetPulse(0);

	KillTimerEx(32);
   
	SendTrigger(-1, 50001, player, 0, -1, -1);
	//SetThingMass(player, 150);
	ClearActorFlags(player, 0x40010);
	SetPhysicsFlags(player, 0x1);

	KnockedBack=0;
	KnockedParent=-1;

    //ParseArg(player, "minheadpitch=-80.00");
   	//ParseArg(player, "maxheadpitch=80.00");
	
	ClearThingFlags(Player, 0x40000000);

	if(Knock_Id != -1)
	{
		StopKey(player, Knock_Id, 0);
		Knock_Id=-1;
	}

   Return;

# ........................................................................................

damaged:

   if(player != GetSenderRef()) return;

   if(GetParam(1) == 32) call make_bubbles;

	// If it's physical damage 
	if(GetParam(1)==64 && GetSourceRef() == player)
	{
		if(KnockedBack>0)
		{
			//Print("Ow, you knocked me back!");
			KBDamage=rand()*10;
			//PrintInt(KBDamage);
			if(!(GetThingFlags(player) & 0x2000000)) PlaySoundThing(Knockback_Snd, player, 1.0, -1, -1, 0x80);
			SetPhysicsFlags(player, 0x1);
			SetThingLook(player, VectorSet(VectorX(GetThingLVec(player)), VectorY(GetThingLVec(player)), 0));

			if(KnockedBack==1)
			{
				SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(player)), -5));

				if(Knock_Id != -1)
				{
					StopKey(player, Knock_Id, 0);
					Knock_Id=-1;
				}
				Knock_Id=PlayKey(player, Knock0, 5, 0x14);
			}
			else if(KnockedBack==2)
			{
				SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(player)), -0.1));
				if(Knock_Id != -1)
				{
					StopKey(player, Knock_Id, 0);
					Knock_Id=-1;
				}
				//Randomize this
				Knock_Id=PlayKey(player, Knock0, 5, 0x14);
			}
			else if(KnockedBack==3)
			{SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(player)), -0.1));}

			returnEx(0);
			
			DamageThing(player, KBDamage, 16, KnockedParent);
			KnockedBack=0;
			return;
		}
		else
		{
			ReturnEx(0);
			return;
		}
	}

	if(GetParam(1) == 16)
	{
		if(GetParam(0) >= GetThingHealth(player))
	 	{
			if(GetThingHealth(player) == 1)
			{
				returnEx(0);
				return;
			}
			else
			{
				ReturnEx(GetThingHealth(player)-1);
				return;
			}
		}
		else
		{
			returnEx(GetParam(0));
			return;
		}
	}

	if(Debug) PrintInt(GetParam(1));

	if(GetParam(1)==8) //Knock back hit
	{
		if(Knock_Id != -1)
		{
			StopKey(player, Knock_Id, 0);
			Knock_Id=-1;
		}

		Blocking=SendMessageEx(GetInvCog(player, 32), user1, -1, -1, -1, -1);

		if(Blocking)
		{
			returnEx(GetParam(0)*1.5);
			return;
		}

		//Let's not forget to add in where the projectile came from
		//and play a keyframe based on that.

		if(Debug)
		{
			jkStringClear();
			jkStringConcatAsciiString("Template ");
			jkStringConcatInt(GetThingTemplate(GetSourceRef()));
		}

		//Tell charging attacks to stop charging

		SendMessage(GetInvCog(player, GetCurWeapon(player)), user7);

		if(GetThingTemplate(GetSourceRef()) == Knockback)
		{
			if(Debug) jkStringConcatInt(Knockback);

			Vector0=VectorSub(GetThingPos(GetSourceRef()), GetThingPos(Player));
			Vector1=VectorSet(VectorX(Vector0), VectorY(Vector0), 0);
			KnockLook=Vector1;

			DetachThing(player);
			SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(GetSourceRef())), 15));
			//Print("Back");
			KnockedBack=1;
			Knock_Id=PlayKey(player, Knock1, 5, 0x14);
		}
		else if(GetThingTemplate(GetSourceRef()) == Knockup)
		{	
			if(Debug) jkStringConcatInt(Knockup);
			//This is neccessary because just setting the velocity upwards causes
			//a wierd ass funky HOM effect

			Vector0=VectorSub(GetThingPos(GetSourceRef()), GetThingPos(Player));
			Vector1=VectorSet(VectorX(Vector0), VectorY(Vector0), 0);
			KnockLook=Vector1;
			Vector2=VectorScale(Vector1, -0.2);
			Vector3=VectorAdd(Vector2, '0 0 1');
			DetachThing(player);
			SetThingVel(player, VectorScale(VectorNorm(Vector3), 15)); //GetThingUVec(GetSourceRef())
			//Print("Up");
			KnockedBack=2;
			Knock_Id=PlayKey(player, Knock2, 5, 0x14);
			if(rand() > 0.5)
			{RandFall=0;}
			else
			{RandFall=3;}
		}
		else if(GetThingTemplate(GetSourceRef()) == Knockdown)
		{
			if(Debug) jkStringConcatInt(KnockDown);
			Vector0=VectorSub(GetThingPos(GetSourceRef()), GetThingPos(Player));
			Vector1=VectorSet(VectorX(Vector0), VectorY(Vector0), 0);
			KnockLook=Vector1;
			Vector2=VectorScale(Vector1, -0.2);
			Vector3=VectorAdd(Vector2, '0 0 -1');
			SetThingVel(player, VectorScale(VectorNorm(Vector3), 15)); //GetThingUVec(GetSourceRef())
			//Print("Down");
			KnockedBack=3;
			Knock_Id=PlayKey(player, Knock3, 5, 0x14);
		}
		else
		{
			Print("That ain't right.....");
			return;
		}
		
		//SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(GetSourceRef())), 15));

		SendMessage(GetInvCog(player, 32), user2); //Tell melee to reset the breakout count
	
		//(Give full disable thing here)
		//Set all inv available to 0
		SetPhysicsFlags(player, 0x10);
		ClearPhysicsFlags(player, 0x2000);
		SetTimerEx(1, 321, -1, -1);

		//SetInvActivated(player, 41, 0);

		if(IsInvActivated(player, 41))
		{crap=SendMessageEx(GetInvCog(player, 41), activated, -1, -1, -1, -1);}

		//SetArmedMode(player, 2);
		
		SendTrigger(-1, 50001, player, 1, -1, -1);
		
		SetActorFlags(player, 0x40000);

		SetThingFlags(Player, 0x40000000); //Look mommy, I can make up my own thing flags ;D

		//ApplyForce(player, VectorScale(VectorNorm(GetThingLVec(GetSourceRef())), 1500));

		//SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(GetSourceRef())), 15));
		//PrintVector(VectorScale(VectorNorm(GetThingLVec(GetSourceRef())), 1000));
		//SetThingMass(player, 5000);
		
		//SetTimerEx(5, 32, -1, -1);
		//SetActorFlags(player, 0x10);

	    ParseArg(player, "minheadpitch=0.00");
    	ParseArg(player, "maxheadpitch=0.00");

		SetActorFlags(player, 0x2);
		AttachSkid=0;

		SetPulse(0.01);

		KnockedParent=GetThingParent(GetSourceRef());
		//PrintInt(KnockedParent);

		if(GetParam(0) >= GetThingHealth(player))
	 	{
			if(GetThingHealth(player) > 1)
			{
				ReturnEx(GetThingHealth(player)-1);
				return;
			}
			else
			{
				returnEx(0);
				return;
			}
		}
	}

	ReturnEx(GetParam(0));
	Return;

# ........................................................................................

touched:

	if(GetThingFlags(player) & 0x40000000) return;

	if(GetThingType(GetSourceRef()) != 2 && GetThingType(GetSourceRef()) != 10) return;

	Thrust=GetThingThrust(player);
	ZThrust=SendMessageEx(GetInvCog(player, 34), user1, -1, -1, -1, -1);
	ZThrust2=SendMessageEx(GetInvCog(player, 33), user1, -1, -1, -1, -1);
	Dashing=SendMessageEx(GetInvCog(player, 34), user2, -1, -1, -1, -1);

	//PrintInt(Dashing);

	if(VectorX(Thrust) == 0 && VectorY(Thrust) == 0 && VectorZ(Thrust) == 0 && ZThrust == 0 && ZThrust2 == 0 && Dashing == 0)
	{	   
		StopThing(player);
		return;
	}

	if(Dashing)
	{
		StopThing(player);
		//Print("Stop dashing");
		SendMessage(GetInvCog(player, 34), deactivated);
	}

return;

# ........................................................................................

blocked:

	if(player != GetSenderRef()) Return;

	if (blockTrack != -1)
	{
		StopKey(player, blockTrack, 0.1 );
		blockTrack = -1;
	}

	blockTrack = PlayKey(player, blockAnim0[nextBlock], 2, 0x1a);

	nextBlock = nextBlock + 1;
	if(nextBlock > 1) nextBlock = 0;

return;

# ........................................................................................

make_bubbles:
   playersector = GetThingSector(player);
   playerpos    = VectorAdd(GetThingPos(player), '0 0 0.075');

   for(bub = 1; bub < 1 + 3 * rand(); bub = bub + 1)
   {
      CreateThingAtPosNR(bubble_tpl[3 * rand()], playersector, VectorAdd(playerpos, VectorScale(VectorNorm(VectorSet(rand()-0.5, rand()-0.5, rand()-0.5)), 0.05)), '0 0 0');
      Sleep(0.05);

      // Don't create too many bubbles over the network...
      if(!IsMulti())
      {
         CreateThingAtPos(bubble_tpl3, playersector, VectorAdd(playerpos, VectorScale(VectorNorm(VectorSet(rand()-0.5, rand()-0.5, rand()-0.5)), 0.05)), '0 0 0');
         Sleep(0.05);
      }
   }

   Return;

# ........................................................................................

newplayer:

   // If it's multiplayer
   if(IsMulti())
   {call init_multi_kyle;}
   else
   {call init_kyle;}

   // Start Bubbles
   SetTimerEx(2 + 5 * rand(), 2, 0, 0);

   SetArmedMode(player, 0);

   Return;

# ........................................................................................

pulse:

	if((GetInv(player, 171) == 1) && !(IsThingMoving(player)))
	{
		SetTimerEx(1.5, 32, -1, -1);
		//Print("Done!");
		SetPulse(0);
	}
	else if(GetInv(player, 171) == 2)
	{
		if(KnockedBack>0)
		{
			//Print("Ow, you knocked me back!");
			KBDamage=rand()*10;
			//PrintInt(KBDamage);
			//PlaySoundThing(Knockback_Snd, player, 1.0, -1, -1, 0x80);
			SetPhysicsFlags(player, 0x1);
			SetThingLook(player, VectorSet(VectorX(GetThingLVec(player)), VectorY(GetThingLVec(player)), 0));

			if(KnockedBack==1)
			{
				SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(player)), -5));

				if(Knock_Id != -1)
				{
					StopKey(player, Knock_Id, 0);
					Knock_Id=-1;
				}
				Knock_Id=PlayKey(player, Knock0, 5, 0x14);
			}
			else if(KnockedBack==2)
			{
				SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(player)), -0.1));
				if(Knock_Id != -1)
				{
					StopKey(player, Knock_Id, 0);
					Knock_Id=-1;
				}
				//Randomize this
				Knock_Id=PlayKey(player, Knock0, 5, 0x14);
			}
			else if(KnockedBack==3)
			{SetThingVel(player, VectorScale(VectorNorm(GetThingLVec(player)), -0.1));}

			DamageThing(player, KBDamage, 16, KnockedParent);

			SetTimerEx(1.5, 32, -1, -1);
			//Print("Done!");
			SetPulse(0);

			return;
		}
	}
	else if(GetInv(player, 171) == 1)
	{
		KillTimerEx(32);
		//make spiffy particles
		//MakePars=MakePars+1;
		//PrintFlex(VectorLen(GetThingVel(player)));
		//if(MakePars==1)
		//{
			//playersector = GetThingSector(player);
			//playerpos    = VectorAdd(GetThingPos(player), '0 0 -0.05');
			//CreateThingAtPos(skidpars, playersector, playerpos, '0 0 0');
			//CreateThing(skidpars, player);
			//MakePars=0;
		//}
		//Print("Attached");
		//if(KnockedBack==1) SetThingLook(player, KnockLook);

		if(KnockedBack==1 && AttachSkid==0)
		{
			if(Knock_Id != -1)
			{
				StopKey(player, Knock_Id, 0);
				Knock_Id=-1;
			}
			Knock_Id=PlayKey(player, Knock0, 5, 0x14);
			AttachSkid=1;
		}
	}
	else
	{
		MakePars=0;
		KillTimerEx(32);
		//Print("In the air!");
		if(KnockedBack==1)
		{SetThingLook(player, VectorScale(VectorNorm(GetThingVel(player)), -1));}
		else if(KnockedBack==2)
		{
			SetThingLook(player, KnockLook);
			if(VectorZ(GetThingVel(player)) < 0)
			{SetThingLook(player, VectorScale(VectorNorm(GetThingVel(player)), -1));}
		}
		else if(KnockedBack==3)
		{SetThingLook(player, KnockLook);}
	}


return;

timer:

   Halt = 0;

   if(GetSenderId() == 1)                    // Invulnerable for a while
   {
      // jkSetInvulnerable(GetParam(0), 0);
      ClearActorFlags(GetParam(0), 8);
      Return;
   }
   else
   if(GetSenderId() == 2)                    // Bubbles check
   {
      if(GetThingHealth(player) < 1) Return;

      if((GetThingFlags(player) & 0x2000000) && !(GetPhysicsFlags(player) & 0x100000))
         call make_bubbles;

      if(IsMulti())
         SetTimerEx(4 + 5 * rand(), 2, 0, 0);
      else
         SetTimerEx(2 + 5 * rand(), 2, 0, 0);

      Return;
   }
   else
   if(GetSenderId() == 27)
   {
      if(blindingEffectHandle!=-1)
      {
         freeColorEffect(blindingEffectHandle);
         blindingEffectHandle = -1;
      }
      // Get the effect ramping down
      AddDynamicTint(player, 200 + 8 * rank, 210 + 10 * rank, 200 + 8 * rank);
      ClearActorFlags(player, 0x800);
      force_blinding = 0;
      Return;
   }
   else if(GetSenderId()==321)
   {
		SetPhysicsFlags(player, 0x1);   
   }
   else if(GetSenderId()==32)
   {
		if(GetThingHealth(player) == 1)
		{
	   		DamageThing(player, 1, 1, KnockedParent);
			return;
	   	}
		//Play Get up anim
		SetThingLook(player, VectorSet(VectorX(GetThingLVec(player)), VectorY(GetThingLVec(player)), 0));
		//SetThingMass(player, 150);
		ApplyForce(player, '0 0 40');

		if(Knock_Id != -1)
		{
			StopKey(player, Knock_Id, 0);
			Knock_Id=-1;
		}
	
		//Print("Getup1");
		PlayKey(player, Getup, 4, 0x38);
		SetTimerEx(GetKeyLen(Getup), 33, -1, -1);
		ClearPhysicsFlags(player, 0x10);
		SetArmedMode(player, 0);
		ClearThingFlags(Player, 0x40000000);
   }
   else if(GetSenderId()==33)
   {
		SendTrigger(-1, 50001, player, 0, -1, -1);
		SetArmedMode(player, 0);
		ClearActorFlags(player, 0x40010);
		SetPulse(0);
		KnockedBack=0;
		KnockedParent=-1;
		if(GetInv(player, 134) == 0)
		{
		    ParseArg(player, "minheadpitch=-80.00");
	    	ParseArg(player, "maxheadpitch=80.00");
	    }
   }
   else if(GetSenderId()==60)
   {
   		CheckIt2=CreateThing(CheckIt, player);
   		if(CheckIt2 == -1)
   		{
			SetActorFlags(player, 0x200000);
   			PlaySoundLocal(alarmsnd, 1.0, 0.0, 0x4);
	 		jkStringClear();
			jkStringConcatAsciiString("ATTENTION");
   			jkStringOutput(-1, -3);
			Sleep(2);
   			PlaySoundLocal(alarmsnd, 1.0, 0.0, 0x4);
   			jkStringClear();
   			jkStringConcatAsciiString("DBZ: TDiR is only playable with the levels made for it");
   			jkStringOutput(-1, -3);
			Sleep(3);
   			PlaySoundLocal(alarmsnd, 1.0, 0.0, 0x4);
   			jkStringClear();
   			jkStringConcatAsciiString("The level will now end");
   			jkStringOutput(-1, -3);
   			jkEndLevel(1);
   		}
   		else
   		{DestroyThing(CheckIt2);}
   }

   Return;

# ........................................................................................

user1:

	if(GetParam(0) == 1)
	{
		if(selection == 2) selection = 0;
	    else selection = selection + 1;
    	playsoundlocal(select, 1.0, 0.0, 0x4);
	    SendTrigger(player, 90000, selection, 0, 0, 0);
	}
	else
	if(GetParam(0) == 0)
	{
		jkSetPOVModel(player, povmodel);
    	SetInv(player, 122, 0.0);
	    SetInvAvailable(player, 21, 1);
	    SetInvAvailable(player, 41, 1);
	    ClearActorFlags(player, 0x40000);
	    playsoundlocal(granted, 1.0, 0.0, 0x4);
	    Print("Your Wish Has Been Granted");
		SendTrigger(-1, 60000, -1,-1,-1,-1);    
		SendMessage(GetInvCog(player, 126), user1);

		if(selection == 0)          //immortality
		{
			//FIX
			//Take it to a timer, not a god damned sleep.....
			SetActorFlags(player, 0x8);
			//Sleep(60.0);
			//ClearActorFlags(player, 0x8);
		}
		else
		if(selection == 1)          //power
		{
			SetActorExtraSpeed(player, 100);
		    SetInvAvailable(player, 22, 0);
		    SetInvAvailable(player, 21, 0);
		    jkSetSuperFlags(1);
			//FIX
			//Once again, TIMER
		    Sleep(60.0);
		    SetActorExtraSpeed(player, 0);
		    SetInvAvailable(player, 22, 1);
		    SetInvAvailable(player, 21, 1);
		    jkClearSuperFlags(1);
		}
		else
		if(selection == 2)           //life
		{
			HealThing(player, 100);
		    //ChangeInv(player, 60, 900);
		    ChangeInv(player, 14, 400);
		    //SendTrigger(-1, 720, player, 0, 0, 0);
		}
	}

return;

# ........................................................................................

skill:

   // player might be dead when skill: arrives over the net...
   if(GetThingHealth(player) <= 0) Return;

   // Handle multiplayer force power effects
   bin = GetParam(0);
   rank = GetParam(1);

   if(bin == 24)                             // Force Pull
   {
      ReturnEx(0);
      if(!IsInvActivated(player, 28))        // Absorb makes player immune to Pull
      {
         if((GetCurWeapon(player) != 1) && (GetCurWeapon(player) != 10))
         {
            // Create a powerup corresponding to the current weapon
            PulledWeapon = CreateThingAtPos(tpl[GetCurWeapon(player)], GetThingSector(player), GetThingPos(player), '0 0 0');

            // Make the powerup collide later
            SetTimerEx(0.2, 24, PulledWeapon, 0);

            // Duplicate for internet games
            SetTimerEx(0.25, 24, PulledWeapon, 0);

            // Throw the powerup at the player
            ApplyForces(PulledWeapon, VectorScale(VectorNorm(VectorSub(GetThingPos(player), GetThingPos(player))), 30));

            // Remove the weapon from the player
            ChangeInvs(player, GetCurWeapon(player), -1);

            // Switch to fists
            SelectWeapons(player, 1);

            ReturnEx(1);
         }
      }

      Return;
   }
   else
   if (bin == 27)                            // Force Blinding
   {
      if((!force_blinding) && (!IsInvActivated(player, 23)))   // Seeing makes player immune to Blinding
      {
         force_blinding = 1;
         blindingEffectHandle = newColorEffect(0, 0, 0, 0, 0, 0, 200 + 8 * rank, 210 + 10 * rank, 200 + 8 * rank, 1.0);
         SetActorFlagss(player, 0x800);
         SetTimerEx(4 * rank, 27, player, 0);
         ReturnEx(1);
      }
      else
      {
         ReturnEx(0);
      }

      Return;
   }
   else
   if (bin == 31)                            // Force Grip
   {
      if(!IsInvActivated(player, 29))        // Protection makes player immune to Grip
      {
         griptrackID = PlayMode(player, 25);
         SetActorFlags(GetSourceRef(), 0x40000);

         // Print("You are taking Grip damage");
         jkPrintUNIString(player, 300);
         DamageThing(GetSourceRef(), 2 * rank, 0x8, player);
         SetTimerEx(0.5, 31, player, 0);
         ReturnEx(1);
      }
      else
      {
         ReturnEx(0);
      }

      Return;
   }
   else
   if (bin == 34)                            // Deadly Sight
   {
      // Print("You are taking Deadly Sight damage");
      jkPrintUNIString(player, 301);
      DamageThing(GetSourceRef(), 4 * rank, 0x8, player);
      smoke = CreateThingAtPosNR(smoke_tpl, GetThingSector(player), GetThingPos(player), '0 0 0');
      // Raise the tint above the normal damage tint
      if(GetCurrentCamera() == 0)
         AddDynamicTint(player, 0.15, 0.0, 0.07);
      ReturnEx(1);
      Return;
   }

   ReturnEx(-1);
   Return;

# ........................................................................................

splash:
   // splash: messages are only sent to the local player's cogs
   // (class cog and capture cog) for performance reasons...

   sender = GetSenderRef();
   source = GetSourceRef();

   // actor or player ?
   if((GetThingType(sender) == 2) || (GetThingType(sender) == 10) || (GetThingType(sender) == 3))
   {
      // whatever source (i.e. enter or leave, don't care)
      a_splash = CreateThingAtPosNR(splash_tpl2, GetThingSector(sender), GetThingPos(sender), '0 0 0');
   }
   // these are mostly the projectiles...
   else
   {
      // on entering only
      if(source == 1)
         // not if player is submerged, but still do it if he's on the surface
         if(!(GetThingFlags(player) & 0x2000000) || (GetPhysicsFlags(player) & 0x100000))
            a_splash = CreateThingNR(splash_tpl, sender);
   }

   Return;

# ........................................................................................

init_kyle:

   SetActorFlags(player, 8);
   SetTimerEx(1.50, 1, player, 0);

   // Set Health to full
   SetThingHealth(player, 100);

   // Set Mana to full
   SetInv(player, 14, GetInv(player, 20) * 5);

   // Set Shields to 100 minimum
   //ChangeInvMax(player, 60, 100);
		
   //if(GetInv(player, 60) < 800) SetInv(player, 60, 800);
   
   // Set Battery to 100 minimum
   SetInv(player, 13, 0);

   // Set the power boost to 1.0
   SetInv(player, 63, 1.0);

   // When player starts, give him fists, and a bryar.
   SetInv(player, 1, 1.0);
   SetInv(player, 2, 1.0);

   // Give 50 energy minimum
   if(GetInv(player, 11) < 50) SetInv(player, 11, 50.0);

   // Bacta
   if(GetInv(player, 40) == 0)
      SetInvAvailable(player, 40, 0);
   else
      SetInvAvailable(player, 40, 1);

   // IR Goggles
   if(GetInv(player, 41))
      SetInvAvailable(player, 41, 1);
  

   // Field Light
   SetInv(player, 42, 1);
   SetInvAvailable(player, 42, 1);
   SetInvActivated(player, 42, 0);
   ClearActorFlags(player, 4); 
    
   jkEndTarget();

   Return;

# ........................................................................................

init_multi_kyle:

	// Do respawn effects
	dummy = CreateThingAtPos(teleport_particles, GetThingSector(player), GetThingPos(player), '0 0 0');
	dummy = PlaySoundThing(teleportsnd, player, 1.0, -1, -1, 0x180);

	SetInvAvailable(player, 40, 1);
	SetInv(player, 40, 1);

	SetInv(player, 14, 400);
	SetInv(player, 60, 100);

	SetInv(player, 181, 0);
	SetInv(player, 182, 0);
	SetInv(player, 183, 0);
	SetInv(player, 184, 0);
	SetInv(player, 185, 0);
	SetInv(player, 186, 0);
	SetInv(player, 187, 0);

	SetCurInvWeapon(player, 3);
	SelectWeapon(player, 3);

return;

init_MP:

	//SetTimerEx(2, 60, -1, -1);

	SetInv(player, 2, 1);
	SetInv(player, 3, 1);
	SetInv(player, 174, 1);
	SetInv(player, 5, 1);
	SetInv(player, 6, 1);
	SetInv(player, 7, 1);
	SetInv(player, 178, 1);
	
	SetInvAvailable(player, 21, 1);
	SetInvAvailable(player, 22, 1);
	SetInvAvailable(player, 23, 0);
	SetInvAvailable(player, 24, 0);	
	SetInvAvailable(player, 25, 1);
	SetInvAvailable(player, 26, 1);
	SetInvAvailable(player, 27, 0);
	SetInvAvailable(player, 28, 1);
	SetInvAvailable(player, 29, 1);
	SetInvAvailable(player, 30, 0);
	SetInvAvailable(player, 31, 1);
	SetInvAvailable(player, 32, 1);
	SetInvAvailable(player, 33, 1);
	SetInvAvailable(player, 34, 1);
	SetInv(player, 34, 1);
	SetInvAvailable(player, 41, 1);
	#21-34
	
	SetInv(player, 20, 1);
	SetInv(player, 14, 400);
	
return;

# ........................................................................................
trigger:

if(GetSourceRef() == 90000)
{
	if(GetParam(0) == 0)
	{
		SetMaterialCel(im, 1);
		SetMaterialCel(po, 0);
		SetMaterialCel(li, 0);
	}
	else if(GetParam(0) == 1)
	{
		SetMaterialCel(im, 0);
		SetMaterialCel(po, 1);
		SetMaterialCel(li, 0);
	}
	else if(GetParam(0) == 2)
	{
		SetMaterialCel(im, 0);
		SetMaterialCel(po, 0);
		SetMaterialCel(li, 1);
	}
}

return;

user2:

	//reset the player from knockback
	//Play Get up anim
	SetThingLook(player, VectorSet(VectorX(GetThingLVec(player)), VectorY(GetThingLVec(player)), 0));
	SetThingMass(player, 150);
	ApplyForce(player, '0 0 40');

	if(Knock_Id != -1)
	{
		StopKey(player, Knock_Id, 0);
		Knock_Id=-1;
	}

	PlayKey(player, Getup, 4, 0x38);
	ClearPhysicsFlags(player, 0x10);
	ClearThingFlags(Player, 0x40000000);
	
	ParseArg(player, "surfdrag=3.000000");
	ParseArg(player, "airdrag=0.5000000");
	ParseArg(player, "staticdrag=0.300000");
	ParseArg(player, "maxrotthrust=90.00");
	ClearActorFlags(player, 0x40010);
	SetPulse(0);
	KnockedBack=0;
	KnockedParent=-1;

	if(GetInv(player, 134) == 0)
	{
		ParseArg(player, "minheadpitch=-80.00");
    	ParseArg(player, "maxheadpitch=80.00");
    }

	KillTimerEx(32);
	KillTimerEx(33);

	if(GetInv(player, 171)==0)
	{SendMessage(GetInvCog(player, 41), activated);}
	else
	{SetArmedMode(player, 0);}

return;

end

